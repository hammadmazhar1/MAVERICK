rule "AirConditionerUpdateMQTT"
when
    Item AirConditioner changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("AirConditioner/bool_On",AirConditioner.state.toString(),true)
end

rule "CoffeeMakerUpdateMQTT"
when
    Item CoffeeMaker changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("CoffeeMaker/bool_On",CoffeeMaker.state.toString(),true)
end

rule "FanUpdateMQTT"
when
    Item Fan changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("Fan/bool_On",Fan.state.toString(),true)
end

rule "LightBulbUpdateMQTT"
when
    Item LightBulb changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("LightBulb/bool_On",LightBulb.state.toString(),true)
end

rule "ShadesUpdateMQTT"
when
    Item Shades changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("Shades/bool_Closed",Shades.state.toString(),true)
end

rule "ThermostatUpdateMQTT"
when
    Item Thermostat changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("Thermostat/int_Temp",Thermostat.state.toString(),true)
end

rule "RefrigeratorUpdateMQTT"
when
    Item Refrigerator changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("Refrigerator/bool_On",Refrigerator.state.toString(),true)
end

rule "RefrigeratorSettingUpdateMQTT"
when
    Item RefrigeratorSetting changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("Refrigerator/int_Setting",RefrigeratorSetting.state.toString(),true)
end

rule "RobotVacuumUpdateMQTT"
when
    Item RobotVacuum changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("RobotVacuum/bool_On",RobotVacuum.state.toString(),true)
end

rule "DoorLockUpdateMQTT"
when
    Item DoorLock changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("DoorLock/bool_Locked",DoorLock.state.toString(),true)
end

rule "GarageDoorOpenerUpdateMQTT"
when
    Item GarageDoorOpener changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("GarageDoorOpener/bool_Closed",GarageDoorOpener.state.toString(),true)
end

rule "SecurityAlarmUpdateMQTT"
when
    Item SecurityAlarm changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("SecurityAlarm/bool_set",SecurityAlarm.state.toString(),true)
end

rule "SecurityAlarmModeUpdateMQTT"
when
    Item SecurityAlarmMode changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("SecurityAlarm/str_Alarm_mode",SecurityAlarmMode.state.toString(),true)
end

rule "SecurityCameraUpdateMQTT"
when
    Item SecurityCamera changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("SecurityCamera/bool_On",SecurityCamera.state.toString(),true)
end

rule "SmartTVUpdateMQTT"
when
    Item SmartTV changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("SmartTV/bool_On",SmartTV.state.toString(),true)
end

rule "SmartTVPlayingUpdateMQTT"
when
    Item SmartTVPlaying changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("SmartTV/str_whats_playing",SmartTVPlaying.state.toString(),true)
end

rule "SpeakerUpdateMQTT"
when
    Item Speaker changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("Speaker/bool_On",Speaker.state.toString(),true)
end

rule "SpeakerPlayingUpdateMQTT"
when
    Item SpeakerPlaying changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("Speaker/str_whats_playing",SpeakerPlaying.state.toString(),true)
end

rule "WaterLeakDetectorStateUpdateMQTT"
when
    Item WaterLeakDetectorState changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("WaterLeakDetectorState/bool_wet",WaterLeakDetectorState.state.toString(),true)
end

rule "GasSensorUpdateMQTT"
when
    Item GasSensor changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("GasSensor/int_odorLevel",GasSensor.state.toString(),true)
end

rule "GasSensorAlarmModeUpdateMQTT"
when
    Item GasSensorAlarmMode changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("GasSensor/str_Alarm_mode",GasSensorAlarmMode.state.toString(),true)
end

rule "MotionSensorStateUpdateMQTT"
when
    Item MotionSensorState changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("MotionSensorState/bool_motion_sensed",MotionSensorState.state.toString(),true)
end

rule "OpenCloseSensorStateUpdateMQTT"
when
    Item OpenCloseSensorState changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("OpenCloseSensorState/bool_Closed",OpenCloseSensorState.state.toString(),true)
end

rule "PresenseSensorUpdateMQTT"
when
    Item PresenseSensor changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("PresenseSensor/bool_presence_sensed",PresenseSensor.state.toString(),true)
end

rule "SmokeDetectorUpdateMQTT"
when
    Item SmokeDetector changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("SmokeDetector/bool_smoke_detected",SmokeDetector.state.toString(),true)
end

rule "DoorbellRingUpdateMQTT"
when
    Item DoorbellRing changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("Doorbell/bool_Rung",DoorbellRing.state.toString(),true)
end

rule "DoorbellUnlockUpdateMQTT"
when
    Item DoorbellUnlock changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("Doorbell/bool_Unlock",DoorbellUnlock.state.toString(),true)
end

rule "LightingRemoteUpdateMQTT"
when
    Item LightingRemote changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("LightingRemote/bool_On",LightingRemote.state.toString(),true)
end

rule "LightingRemoteSetColorUpdateMQTT"
when
    Item LightingRemoteSetColor changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("LightingRemote/str_setColor",LightingRemoteSetColor.state.toString(),true)
end

rule "ValveUpdateMQTT"
when
    Item Valve changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("Valve/bool_Closed",Valve.state.toString(),true)
end

rule "SmartHomeUpdateMQTT"
when
    Item SmartHome changed
then
    val mqttActions = getActions("mqtt","mqtt:broker:broker")
    mqttActions.publishMQTT("SmartHome/str_mode",SmartHome.state.toString(),true)
end